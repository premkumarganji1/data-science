{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":4832081,"sourceType":"datasetVersion","datasetId":2799910}],"dockerImageVersionId":30775,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-24T18:44:17.766960Z","iopub.execute_input":"2024-09-24T18:44:17.767446Z","iopub.status.idle":"2024-09-24T18:44:19.260695Z","shell.execute_reply.started":"2024-09-24T18:44:17.767398Z","shell.execute_reply":"2024-09-24T18:44:19.258820Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/salary-dataset-simple-linear-regression/Salary_dataset.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.metrics import r2_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:28.769301Z","iopub.execute_input":"2024-09-24T19:13:28.769858Z","iopub.status.idle":"2024-09-24T19:13:28.777457Z","shell.execute_reply.started":"2024-09-24T19:13:28.769810Z","shell.execute_reply":"2024-09-24T19:13:28.775758Z"},"trusted":true},"execution_count":42,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/salary-dataset-simple-linear-regression/Salary_dataset.csv', header=0)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:29.692041Z","iopub.execute_input":"2024-09-24T19:13:29.692574Z","iopub.status.idle":"2024-09-24T19:13:29.717151Z","shell.execute_reply.started":"2024-09-24T19:13:29.692527Z","shell.execute_reply":"2024-09-24T19:13:29.715520Z"},"trusted":true},"execution_count":43,"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0  YearsExperience   Salary\n0           0              1.2  39344.0\n1           1              1.4  46206.0\n2           2              1.6  37732.0\n3           3              2.1  43526.0\n4           4              2.3  39892.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>YearsExperience</th>\n      <th>Salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1.2</td>\n      <td>39344.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1.4</td>\n      <td>46206.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>1.6</td>\n      <td>37732.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>2.1</td>\n      <td>43526.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>2.3</td>\n      <td>39892.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Ignore Unnamed: 0 column from above dataframe\ndf = df.iloc[:, 1:]\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:30.436099Z","iopub.execute_input":"2024-09-24T19:13:30.436558Z","iopub.status.idle":"2024-09-24T19:13:30.454285Z","shell.execute_reply.started":"2024-09-24T19:13:30.436518Z","shell.execute_reply":"2024-09-24T19:13:30.452568Z"},"trusted":true},"execution_count":44,"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"   YearsExperience   Salary\n0              1.2  39344.0\n1              1.4  46206.0\n2              1.6  37732.0\n3              2.1  43526.0\n4              2.3  39892.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>YearsExperience</th>\n      <th>Salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.2</td>\n      <td>39344.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.4</td>\n      <td>46206.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.6</td>\n      <td>37732.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2.1</td>\n      <td>43526.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2.3</td>\n      <td>39892.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Check for null values\ndf.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:32.330219Z","iopub.execute_input":"2024-09-24T19:13:32.330822Z","iopub.status.idle":"2024-09-24T19:13:32.344673Z","shell.execute_reply.started":"2024-09-24T19:13:32.330772Z","shell.execute_reply":"2024-09-24T19:13:32.342727Z"},"trusted":true},"execution_count":45,"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"YearsExperience    0\nSalary             0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# Check for any outliers\nsns.boxplot(df['Salary'])","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:33.226524Z","iopub.execute_input":"2024-09-24T19:13:33.227151Z","iopub.status.idle":"2024-09-24T19:13:33.481636Z","shell.execute_reply.started":"2024-09-24T19:13:33.227098Z","shell.execute_reply":"2024-09-24T19:13:33.479684Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAkIAAAGdCAYAAAD+JxxnAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAi7UlEQVR4nO3de3BU9d3H8c+GkGxENuFSdtmaYqalXISCgIYgwjhkWC7aCdJKIBUGU2JtQsGoCAoBWxUJpRW8QLGdgWmhRWYKg0CiabCmhTRAMIIISKcoKG6whexCICEk5/mDyXlYsEDshiX5vV8zO8Pu+e6e30mG2fecvcRhWZYlAAAAA0VFegEAAACRQggBAABjEUIAAMBYhBAAADAWIQQAAIxFCAEAAGMRQgAAwFiEEAAAMFZ0pBdwM2toaNDx48fVvn17ORyOSC8HAABcB8uydPr0aXm9XkVFXf2cDyF0FcePH1diYmKklwEAAL6GY8eO6bbbbrvqDCF0Fe3bt5d08QfpcrkivBoAAHA9gsGgEhMT7efxqyGErqLx5TCXy0UIAQDQwlzP21p4szQAADAWIQQAAIxFCAEAAGMRQgAAwFiEEAAAMBYhBAAAjEUIAQAAYxFCAADAWIQQAAAwFiEEAACMRQgBAABj8bfGgBvEsizV1NREehnQxd9FbW2tJCk2Nva6/h4Rbgyn08nvAzcUIQTcIDU1NRo9enSklwHc1AoKChQXFxfpZcAgvDQGAACMxRkh4AZxOp0qKCiI9DKgi2fnxo0bJ0nasGGDnE5nhFeERvwucKMRQsAN4nA4OOV/E3I6nfxeAIPx0hgAADAWIQQAAIxFCAEAAGM1OYRKSkr0wAMPyOv1yuFwaOPGjfa2uro6Pf300+rbt6/atWsnr9eryZMn6/jx4yGPcfLkSWVkZMjlcikhIUGZmZk6c+ZMyMzevXt17733yul0KjExUfn5+VesZf369erZs6ecTqf69u2rrVu3hmy3LEt5eXnq2rWr4uLilJqaqsOHDzf1kAEAQCvV5BCqrq5Wv3799Nprr12x7ezZs9qzZ4/mzZunPXv26M9//rMOHTqk73//+yFzGRkZ2r9/v4qKirR582aVlJQoKyvL3h4MBjVy5Eh169ZN5eXlWrx4sRYsWKCVK1faMzt27NDEiROVmZmp999/X2lpaUpLS9OHH35oz+Tn52vZsmVasWKFysrK1K5dO/l8Pr7UDgAAXGT9DyRZGzZsuOrMzp07LUnWp59+almWZX300UeWJGvXrl32TEFBgeVwOKzPP//csizLev31160OHTpYtbW19szTTz9t9ejRw77+0EMPWWPHjg3ZV3JysvXoo49almVZDQ0NlsfjsRYvXmxvr6qqsmJjY60//vGP13V8gUDAkmQFAoHrmgfQMpw9e9YaPny4NXz4cOvs2bORXg6AMGvK83ezv0coEAjI4XAoISFBklRaWqqEhAQNGjTInklNTVVUVJTKysrsmWHDhikmJsae8fl8OnTokE6dOmXPpKamhuzL5/OptLRUknTkyBH5/f6Qmfj4eCUnJ9szl6utrVUwGAy5AACA1qtZQ6impkZPP/20Jk6cKJfLJUny+/3q0qVLyFx0dLQ6duwov99vz7jd7pCZxuvXmrl0+6X3+6qZyy1cuFDx8fH2JTExscnHDAAAWo5mC6G6ujo99NBDsixLy5cvb67dhNWcOXMUCATsy7FjxyK9JAAA0Iya5ZulGyPo008/1bZt2+yzQZLk8Xh04sSJkPkLFy7o5MmT8ng89kxlZWXITOP1a81cur3xtq5du4bM9O/f/yvXHRsbq9jY2KYeLgAAaKHCfkaoMYIOHz6sv/zlL+rUqVPI9pSUFFVVVam8vNy+bdu2bWpoaFBycrI9U1JSorq6OnumqKhIPXr0UIcOHeyZ4uLikMcuKipSSkqKJCkpKUkejydkJhgMqqyszJ4BAABma3IInTlzRhUVFaqoqJB08U3JFRUVOnr0qOrq6vSDH/xAu3fv1po1a1RfXy+/3y+/36/z589Lknr16qVRo0Zp2rRp2rlzp7Zv366cnBylp6fL6/VKkiZNmqSYmBhlZmZq//79WrdunZYuXarc3Fx7HTNmzFBhYaGWLFmigwcPasGCBdq9e7dycnIkXfy7TjNnztTzzz+vTZs2ad++fZo8ebK8Xq/S0tL+xx8bAABoFZr6kbR3333XknTFZcqUKdaRI0e+cpsk691337Uf4z//+Y81ceJE69Zbb7VcLpc1depU6/Tp0yH7+eCDD6yhQ4dasbGx1je/+U3rpZdeumItb775pvXd737XiomJse644w5ry5YtIdsbGhqsefPmWW6324qNjbVGjBhhHTp06LqPlY/PA60TH58HWremPH87LMuyIlJgLUAwGFR8fLwCgUDI+5wAtGznzp3T6NGjJUkFBQX89XmglWnK8zd/awwAABiLEAIAAMYihAAAgLEIIQAAYCxCCAAAGIsQAgAAxiKEAACAsQghAABgLEIIAAAYixACAADGIoQAAICxCCEAAGAsQggAABiLEAIAAMYihAAAgLEIIQAAYCxCCAAAGIsQAgAAxiKEAACAsQghAABgLEIIAAAYixACAADGIoQAAICxCCEAAGAsQggAABiLEAIAAMYihAAAgLEIIQAAYCxCCAAAGIsQAgAAxiKEAACAsQghAABgLEIIAAAYixACAADGIoQAAICxCCEAAGAsQggAABiLEAIAAMYihAAAgLEIIQAAYCxCCAAAGIsQAgAAxiKEAACAsQghAABgLEIIAAAYixACAADGIoQAAICxCCEAAGAsQggAABiLEAIAAMYihAAAgLEIIQAAYCxCCAAAGIsQAgAAxiKEAACAsQghAABgLEIIAAAYixACAADGIoQAAICxCCEAAGAsQggAABiLEAIAAMYihAAAgLEIIQAAYCxCCAAAGIsQAgAAxiKEAACAsQghAABgrOim3qGkpESLFy9WeXm5vvjiC23YsEFpaWn2dsuyNH/+fL3xxhuqqqrSPffco+XLl6t79+72zMmTJzV9+nS99dZbioqK0vjx47V06VLdeuut9szevXuVnZ2tXbt26Rvf+IamT5+uWbNmhaxl/fr1mjdvnj755BN1795dixYt0pgxY5q0ltbOsizV1NREehnATeXS/xP8/wC+mtPplMPhiPQyml2TQ6i6ulr9+vXTI488ogcffPCK7fn5+Vq2bJlWr16tpKQkzZs3Tz6fTx999JGcTqckKSMjQ1988YWKiopUV1enqVOnKisrS2vXrpUkBYNBjRw5UqmpqVqxYoX27dunRx55RAkJCcrKypIk7dixQxMnTtTChQt1//33a+3atUpLS9OePXvUp0+f615La1dTU6PRo0dHehnATWvcuHGRXgJwUyooKFBcXFykl9HsHJZlWV/7zg5HyBkhy7Lk9Xr1xBNP6Mknn5QkBQIBud1urVq1Sunp6Tpw4IB69+6tXbt2adCgQZKkwsJCjRkzRp999pm8Xq+WL1+uZ599Vn6/XzExMZKk2bNna+PGjTp48KAkacKECaqurtbmzZvt9QwePFj9+/fXihUrrmst1xIMBhUfH69AICCX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"},"metadata":{}}]},{"cell_type":"code","source":"# Use Scatterplot to observe the pattern\nplt.scatter(df['YearsExperience'], df['Salary'])\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:34.182839Z","iopub.execute_input":"2024-09-24T19:13:34.183330Z","iopub.status.idle":"2024-09-24T19:13:34.469274Z","shell.execute_reply.started":"2024-09-24T19:13:34.183288Z","shell.execute_reply":"2024-09-24T19:13:34.467569Z"},"trusted":true},"execution_count":47,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"df['YearsExperience'].shape","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:36.944674Z","iopub.execute_input":"2024-09-24T19:13:36.945167Z","iopub.status.idle":"2024-09-24T19:13:36.955577Z","shell.execute_reply.started":"2024-09-24T19:13:36.945120Z","shell.execute_reply":"2024-09-24T19:13:36.953871Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"(30,)"},"metadata":{}}]},{"cell_type":"code","source":"# Split data for training and testing\nx_train, x_test, y_train, y_test = train_test_split(df[['YearsExperience']], df['Salary'], test_size=.25)","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:37.623079Z","iopub.execute_input":"2024-09-24T19:13:37.623664Z","iopub.status.idle":"2024-09-24T19:13:37.636873Z","shell.execute_reply.started":"2024-09-24T19:13:37.623614Z","shell.execute_reply":"2024-09-24T19:13:37.635154Z"},"trusted":true},"execution_count":49,"outputs":[]},{"cell_type":"code","source":"x_train.shape","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:40.434192Z","iopub.execute_input":"2024-09-24T19:13:40.434748Z","iopub.status.idle":"2024-09-24T19:13:40.444458Z","shell.execute_reply.started":"2024-09-24T19:13:40.434702Z","shell.execute_reply":"2024-09-24T19:13:40.442810Z"},"trusted":true},"execution_count":50,"outputs":[{"execution_count":50,"output_type":"execute_result","data":{"text/plain":"(22, 1)"},"metadata":{}}]},{"cell_type":"code","source":"# Create a linear regression model\nmodel = LinearRegression()","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:41.935424Z","iopub.execute_input":"2024-09-24T19:13:41.936614Z","iopub.status.idle":"2024-09-24T19:13:41.942969Z","shell.execute_reply.started":"2024-09-24T19:13:41.936541Z","shell.execute_reply":"2024-09-24T19:13:41.940931Z"},"trusted":true},"execution_count":51,"outputs":[]},{"cell_type":"code","source":"# Fit the model to the training data\nmodel.fit(x_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:43.114757Z","iopub.execute_input":"2024-09-24T19:13:43.115203Z","iopub.status.idle":"2024-09-24T19:13:43.129046Z","shell.execute_reply.started":"2024-09-24T19:13:43.115156Z","shell.execute_reply":"2024-09-24T19:13:43.127147Z"},"trusted":true},"execution_count":52,"outputs":[{"execution_count":52,"output_type":"execute_result","data":{"text/plain":"LinearRegression()","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"# Make predictions on the test data\ny_pred = model.predict(x_test)\ny_pred","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:44.860571Z","iopub.execute_input":"2024-09-24T19:13:44.861221Z","iopub.status.idle":"2024-09-24T19:13:44.875943Z","shell.execute_reply.started":"2024-09-24T19:13:44.861155Z","shell.execute_reply":"2024-09-24T19:13:44.873869Z"},"trusted":true},"execution_count":53,"outputs":[{"execution_count":53,"output_type":"execute_result","data":{"text/plain":"array([ 75839.29981007, 114641.10725749,  73991.59469352,  62905.36399426,\n       123879.63284021, 102631.02399996,  63829.21655253,  45352.16538709])"},"metadata":{}}]},{"cell_type":"code","source":"# plot the regression line for the model\nplt.scatter(x_train, y_train)\nplt.plot(x_test, y_pred, color='red')\nplt.xlabel('x')\nplt.ylabel('y')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:45.997704Z","iopub.execute_input":"2024-09-24T19:13:45.998147Z","iopub.status.idle":"2024-09-24T19:13:46.220939Z","shell.execute_reply.started":"2024-09-24T19:13:45.998106Z","shell.execute_reply":"2024-09-24T19:13:46.219230Z"},"trusted":true},"execution_count":54,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# Calculate the R-squared score\nr2 = r2_score(y_test, y_pred)\nr2","metadata":{"execution":{"iopub.status.busy":"2024-09-24T19:13:49.043280Z","iopub.execute_input":"2024-09-24T19:13:49.043808Z","iopub.status.idle":"2024-09-24T19:13:49.056060Z","shell.execute_reply.started":"2024-09-24T19:13:49.043759Z","shell.execute_reply":"2024-09-24T19:13:49.054686Z"},"trusted":true},"execution_count":55,"outputs":[{"execution_count":55,"output_type":"execute_result","data":{"text/plain":"0.9516975393443068"},"metadata":{}}]}]}